/**
  * @author ShankarShastri
  *         Algorithm: RecursiveDigitSum
  *         (https://www.hackerrank.com/challenges/recursive-digit-sum/)
  */

package contests.hackerrank

import scala.io.StdIn._
import scala.annotation.tailrec



object RecursiveDigitSum {
  import scala.annotation.tailrec
  
  @tailrec
  def supNum(num: String): String = {
    num match {
      case n if n.length == 1 => n
      case n => supNum(n.map(_.toString.toInt).sum.toString)
    }
  }
  
  def superDigit(n: String, k: Int): Int = {
    if(k%10 == 0)
      supNum(n).toInt
    else supNum(n*(k%10)).toInt
  }
  
  def main(args: Array[String]): Unit = {
    val n = "740495400969422744624637574722785221369257089071788417400158753714583872" +
      "33903626244879261311611127105891274230989593270205440033957924826251917216033283077749981243896410698846340868491" +
      "3851507922075046231735748776278048057664068917534695613566845183548049008996240677326756965066392777886776431521128062" +
      "5033388271518264961090111547480467065229843613873499846390257375933040086863430523668050046930387013897062106309406874425" +
      "0011278905749866100180938596934555184132689143618590006149044619024428225775529976800983891830826546250988174113069850106587567" +
      "621521609042781694916348074643561308775263927254320864399340067289144110618612353009795361901007343606840545574484546407501984668771858" +
      "75290011114667186730452681943043971812380628117527172389889545776779555664826488520325234792648448625225364535053605515" +
      "38673092507007289600464541671368200460063657438904066282718269633718761090469402922188080137286404034556723094111098602856837" +
      "2710970460116491983700312243090679537497139499778923997433720159174153"
    println(superDigit(n, 10000))
  }
}
